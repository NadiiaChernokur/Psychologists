{"version":3,"file":"static/js/71.a2db4fd8.chunk.js","mappings":"2pBACaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gVAiBhBC,EAASH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qEAKlBG,EAAUL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gKAQpBK,EAAkBP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oDAI5BO,EAAST,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,sFAKnBS,EAAYX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,2MAWtBW,EAAUb,EAAAA,GAAAA,EAAQc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,kIAMlBa,EAAYf,EAAAA,GAAAA,KAAWgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,6BAGvBe,EAAQjB,EAAAA,GAAAA,EAAQkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,iCAShBiB,GANQnB,EAAAA,GAAAA,EAAQoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,4FAMPF,EAAAA,GAAAA,EAAQqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,gKASjBoB,EAAOtB,EAAAA,GAAAA,EAAQuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,6NAYfsB,EAAgBxB,EAAAA,GAAAA,IAAUyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,uMAW1BwB,EAAsB1B,EAAAA,GAAAA,IAAU2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,+GAOhC0B,EAAa5B,EAAAA,GAAAA,EAAQ6B,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,kKASrB4B,EAAiB9B,EAAAA,GAAAA,KAAW+B,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,6BAI5B8B,EAAQhC,EAAAA,GAAAA,EAAQiC,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,0RAchBgC,EAASlC,EAAAA,GAAAA,OAAamC,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,0ZAoBtBkC,EAASpC,EAAAA,GAAAA,IAAUqC,IAAAA,GAAAnC,EAAAA,EAAAA,GAAA,+DAKnBoC,EAAUtC,EAAAA,GAAAA,IAAUuC,IAAAA,GAAArC,EAAAA,EAAAA,GAAA,iCAGpBsC,EAAYxC,EAAAA,GAAAA,OAAayC,IAAAA,GAAAvC,EAAAA,EAAAA,GAAA,sF,qHCjKzBwC,EAAkB1C,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0IAQ5ByC,EAAW3C,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6FAMpB0C,EAAW5C,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qEAKpB2C,EAAS7C,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2RAcnB4C,EAAO9C,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2CAIjB6C,EAAU/C,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iEAKpB8C,EAAQhD,EAAAA,GAAAA,IAAUc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,0CAIlB+C,EAAWjD,EAAAA,GAAAA,EAAQgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,+KASnBgD,EAAoBlD,EAAAA,GAAAA,OAAakB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,oK,oECvDjCiD,EAA6BnD,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mKAWvCkD,EAA4BpD,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2OAYtCmD,EAAgBrD,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gJAQzBoD,EAAkBtD,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kIAO1BqD,EAAmBvD,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,kEAK7BsD,EAAiBxD,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,mEAK3BuD,EAAkBzD,EAAAA,GAAAA,KAAWc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,gHAO7BwD,EAAU1D,EAAAA,GAAAA,IAAUgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,yDAKpByD,EAAkB3D,EAAAA,GAAAA,MAAYkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,4OAY9B0D,EAAY5D,EAAAA,GAAAA,MAAYoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,yOAYxB2D,EAAO7D,EAAAA,GAAAA,OAAaqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,wHAQpB4D,EAAW9D,EAAAA,GAAAA,SAAeuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,0N,+BCzEjC6D,GAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaG,aA+FzB,GA5FoB,SAAHE,GAA2B,IAArBC,EAAMD,EAANC,OAAQC,EAAKF,EAALE,MAC7BC,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYZ,MALtBa,EAAQJ,EAARI,SACAC,EAAYL,EAAZK,cC7BW,SAAmCC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,+BACvC,CDyBEC,CAAAR,EAIES,YAIFC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,SAACC,GACT,WAAVA,EAAEC,KACJd,GAEJ,EAEA,OADAe,SAASC,iBAAiB,UAAWJ,GAC9B,WACLG,SAASE,oBAAoB,UAAWL,EAC1C,CACF,GAAG,CAACZ,IAaJ,OACEkB,EAAAA,GAAAA,KAACtC,EAA0B,CAACuC,QANA,SAACC,GACzBA,EAAMC,SAAWD,EAAME,eACzBtB,GAEJ,EAE6DuB,UACzDC,EAAAA,GAAAA,MAAC3C,EAAyB,CAAA0C,SAAA,EACxBL,EAAAA,GAAAA,KAACO,EAAAA,GAAG,CAACN,QAXQ,WACjBnB,GACF,EAS+BuB,UACvBL,EAAAA,GAAAA,KAAA,OAAKQ,MAAM,KAAKC,OAAO,KAAIJ,UACzBL,EAAAA,GAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,GAAAA,EAAM,eAGxBZ,EAAAA,GAAAA,KAACpC,EAAa,CAAAyC,SAAC,8CACfL,EAAAA,GAAAA,KAACnC,EAAe,CAAAwC,SAAC,6NAMjBC,EAAAA,GAAAA,MAACxC,EAAgB,CAAAuC,SAAA,EACfL,EAAAA,GAAAA,KAACjC,EAAc,CACb8C,IAAKhC,EAAOiC,WACZC,IAAKlC,EAAOmC,QAEdV,EAAAA,GAAAA,MAAA,OAAAD,SAAA,EACEL,EAAAA,GAAAA,KAAA,KAAAK,SAAG,wBACHL,EAAAA,GAAAA,KAAA,KAAAK,SAAIxB,EAAOmC,cAGfV,EAAAA,GAAAA,MAACtC,EAAe,CAACiD,SAAU7B,GApChB,SAAC8B,GAChBpC,GACF,IAkCwDuB,SAAA,EAChDL,EAAAA,GAAAA,KAAC9B,GAAeiD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACdC,KAAK,QACDjC,EAAS,SAAO,IACpBkC,YAAY,WAGdf,EAAAA,GAAAA,MAACrC,EAAO,CAAAoC,SAAA,EACNL,EAAAA,GAAAA,KAAC7B,GAASgD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACRC,KAAK,UACDjC,EAAS,WAAS,IACtBkC,YAAY,oBAGdrB,EAAAA,GAAAA,KAAC7B,GAASgD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACC,KAAK,QAAWjC,EAAS,SAAO,IAAEkC,YAAY,eAG3DrB,EAAAA,GAAAA,KAAC9B,GAAeiD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACdC,KAAK,SACDjC,EAAS,UAAQ,IACrBkC,YAAY,YAGdrB,EAAAA,GAAAA,KAAC3B,GAAQ8C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACPC,KAAK,YACDjC,EAAS,YAAU,IACvBkC,YAAY,cAGdrB,EAAAA,GAAAA,KAAC5B,EAAI,CAACgD,KAAK,SAAQf,SAAC,gBAK9B,EE9DA,GAxCqB,SAAHzB,GAA2B,IAArB0C,EAAK1C,EAAL0C,MAAOzC,EAAMD,EAANC,OAC7B0C,GAA0BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAOtB,OACEnB,EAAAA,GAAAA,MAACrD,EAAe,CAAAoD,SAAA,CACbiB,EAAMO,KAAI,SAACC,EAAIC,GAAK,OACnB/B,EAAAA,GAAAA,KAAC9C,EAAQ,CAAAmD,UACPC,EAAAA,GAAAA,MAACnD,EAAQ,CAAAkD,SAAA,EACPC,EAAAA,GAAAA,MAAC/C,EAAK,CAAA8C,SAAA,EACJL,EAAAA,GAAAA,KAAC5C,EAAM,CAAAiD,UACLL,EAAAA,GAAAA,KAAA,KAAAK,SAAIyB,EAAGE,SAASC,OAAO,QAEzB3B,EAAAA,GAAAA,MAAA,OAAAD,SAAA,EACEL,EAAAA,GAAAA,KAAA,KAAAK,SAAIyB,EAAGE,YACP1B,EAAAA,GAAAA,MAAChD,EAAO,CAAA+C,SAAA,EACNL,EAAAA,GAAAA,KAAC3C,EAAI,CAAAgD,UACHL,EAAAA,GAAAA,KAAA,OAAKQ,MAAM,KAAKC,OAAO,KAAIJ,UACzBL,EAAAA,GAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,GAAAA,EAAM,gBAGxBZ,EAAAA,GAAAA,KAAA,KAAAK,SAAIyB,EAAGI,mBAIblC,EAAAA,GAAAA,KAACxC,EAAQ,CAAA6C,SAAEyB,EAAGK,YAjBDJ,IAmBN,KAEb/B,EAAAA,GAAAA,KAACvC,EAAiB,CAACwC,QA/BL,WAChB2B,GAAS,EACX,EA6B0CvB,SAAC,wBAGtCsB,IAAS3B,EAAAA,GAAAA,KAACoC,GAAW,CAACvD,OAAQA,EAAQC,MA/BxB,WACjB8C,GAAS,EACX,MAgCF,C,wLCrDaS,EAAe9H,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wI,oDCAzB6H,EAAiB/H,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4O,SCWxC,EAT0B,WACxB,OACE6F,EAAAA,EAAAA,MAACgC,EAAc,CAAAjC,SAAA,EACbL,EAAAA,EAAAA,KAAA,KAAAK,SAAG,mCACHL,EAAAA,EAAAA,KAAA,OAAKa,IAAK0B,EAAKxB,IAAI,kBAGzB,EC8HA,EA1GqB,WACnB,IAAAQ,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BD,EAAKG,EAAA,GAAEe,EAAQf,EAAA,GACtBgB,GAAkCjB,EAAAA,EAAAA,UAAS,IAAGkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA4BrB,EAAAA,EAAAA,UAAS,CAAC,GAAEsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,aAAa,IACrDC,GAAWC,EAAAA,EAAAA,OAEjB7D,EAAAA,EAAAA,YAAU,WACR+C,EAASS,EACX,GAAG,CAACA,KAEJxD,EAAAA,EAAAA,YAAU,WACR,IAAM8D,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAsB,GACpEf,EAAaW,EAEf,GAAG,IAeH,OACEvD,EAAAA,EAAAA,KAACqC,EAAY,CAAAhC,SACVsC,EAAUiB,OAAS,GAClB5D,EAAAA,EAAAA,KAACtF,EAAAA,GAAM,CAAA2F,SACJiB,EAAMO,KAAI,SAACC,EAAIC,GAAK,OACnBzB,EAAAA,EAAAA,MAAChG,EAAAA,GAAI,CAAA+F,SAAA,EACHC,EAAAA,EAAAA,MAACzD,EAAAA,GAAO,CAAAwD,SAAA,EACNL,EAAAA,EAAAA,KAACrD,EAAAA,GAAM,CAAC6D,MAAM,KAAKC,OAAO,KAAIJ,UAC5BL,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,eAEtBZ,EAAAA,EAAAA,KAACpF,EAAAA,GAAO,CAACiG,IAAKiB,EAAGhB,WAAYC,IAAKe,EAAGd,WAEvCV,EAAAA,EAAAA,MAACxF,EAAAA,GAAe,CAAAuF,SAAA,EACdC,EAAAA,EAAAA,MAACtF,EAAAA,GAAM,CAAAqF,SAAA,EACLL,EAAAA,EAAAA,KAACtE,EAAAA,GAAM,CAAA2E,SAAC,kBACRC,EAAAA,EAAAA,MAACpF,EAAAA,GAAS,CAAAmF,SAAA,EACRL,EAAAA,EAAAA,KAAA,OAAKQ,MAAM,KAAKC,OAAO,KAAIJ,UACzBL,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,cAEtBN,EAAAA,EAAAA,MAAClF,EAAAA,GAAO,CAAAiF,SAAA,CAAC,WAASyB,EAAGI,WACrB5B,EAAAA,EAAAA,MAAC9E,EAAAA,GAAK,CAAA6E,SAAA,CAAC,mBAELC,EAAAA,EAAAA,MAAChF,EAAAA,GAAS,CAAA+E,SAAA,CAAC,IAAEyB,EAAG+B,eAAe,WAEjC7D,EAAAA,EAAAA,KAACjD,EAAAA,GAAS,CAACkD,QAAS,kBArCb,SAACe,GACxBqC,GAASS,EAAAA,EAAAA,IAAmB9C,IAC5B,IAAM+C,EAAmBpB,EAAUqB,QAAO,SAACC,GAAI,OAAKA,IAASjD,CAAI,IACjE4B,EAAamB,GACbL,aAAaQ,QAAQ,iBAAkBV,KAAKW,UAAUJ,GACxD,CAgC4CK,CAAiBtC,EAAGd,KAAK,EAACX,UAClDL,EAAAA,EAAAA,KAAA,OAAKQ,MAAM,KAAKC,OAAO,KAAIJ,UACzBL,EAAAA,EAAAA,KAAA,OAAKU,KAAI,GAAAC,OAAKC,EAAAA,EAAM,sBAK5BZ,EAAAA,EAAAA,KAACnE,EAAAA,GAAI,CAAAwE,SAAEyB,EAAGd,QACVV,EAAAA,EAAAA,MAACvE,EAAAA,GAAa,CAAAsE,SAAA,EACZC,EAAAA,EAAAA,MAACrE,EAAAA,GAAmB,CAAAoE,SAAA,EAClBC,EAAAA,EAAAA,MAACnE,EAAAA,GAAU,CAAAkE,SAAA,CAAC,cACE,KACZL,EAAAA,EAAAA,KAAC3D,EAAAA,GAAc,CAAAgE,SAAEyB,EAAGuC,iBAEtB/D,EAAAA,EAAAA,MAACnE,EAAAA,GAAU,CAAAkE,SAAA,CAAC,YAEVC,EAAAA,EAAAA,MAACjE,EAAAA,GAAc,CAAAgE,SAAA,CAAC,IAAEyB,EAAGwC,kBAGzBhE,EAAAA,EAAAA,MAACrE,EAAAA,GAAmB,CAAAoE,SAAA,EAClBC,EAAAA,EAAAA,MAACnE,EAAAA,GAAU,CAAAkE,SAAA,CAAC,mBAEVC,EAAAA,EAAAA,MAACjE,EAAAA,GAAc,CAAAgE,SAAA,CAAC,IAAEyB,EAAGyC,sBAEvBjE,EAAAA,EAAAA,MAACnE,EAAAA,GAAU,CAAAkE,SAAA,CAAC,yBAEVC,EAAAA,EAAAA,MAACjE,EAAAA,GAAc,CAAAgE,SAAA,CACZ,IACAyB,EAAG0C,kCAKZxE,EAAAA,EAAAA,KAACzD,EAAAA,GAAK,CAAA8D,SAAEyB,EAAG2C,SACT1B,EAAOhB,KACP/B,EAAAA,EAAAA,KAACvD,EAAAA,GAAM,CAACwD,QAAS,kBAjEb,SAAC8B,GACnBiB,GAAU,SAAC0B,GAAU,OAAAvD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBuD,GAAU,IAAAC,EAAAA,EAAAA,GAAA,GACZ5C,GAAS2C,EAAW3C,IAAM,GAE/B,CA4DuC6C,CAAY7C,EAAM,EAAC1B,SAAC,cAG5C0C,EAAOhB,KACN/B,EAAAA,EAAAA,KAAC6E,EAAAA,EAAY,CAACvD,MAAOQ,EAAGgD,QAASjG,OAAQiD,SA1DpCA,EAAGd,KA6DP,OAIXhB,EAAAA,EAAAA,KAAC+E,EAAiB,KAI1B,C,gSCpIaC,EAAuBzK,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mKAWjCwK,EAAsB1K,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qOAWhCyK,EAAS3K,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gJAQlB0K,EAAgB5K,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iJAQxB2K,EAAY7K,EAAAA,GAAAA,KAAWU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,qFAMvB4K,EAAa9K,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,uDAIvB6K,EAAa/K,EAAAA,GAAAA,MAAYc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,qGAKzB8K,EAAchL,EAAAA,GAAAA,OAAagB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,+EAK3B8F,EAAMhG,EAAAA,GAAAA,OAAakB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,kG","sources":["Card/Card.styled.js","Card/ReadMe.styled.js","Appoinment/Appointment.styled.js","Appoinment/Appointment.js","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","Card/ReadMe.js","FavoriteList/FavoriteList.styled.js","EmptyFavoriteList/EmptyFavoriteList.styled.js","EmptyFavoriteList/EmptyFavoriteList.js","FavoriteList/FavoriteList.js","LogIn/LogIn.styled.js"],"sourcesContent":["import styled from \"styled-components\";\nexport const List = styled.li`\n  max-width: 1184px;\n\n  padding: 24px;\n  background-color: #fbfbfb;\n  border-radius: 24px;\n  box-sizing: border-box;\n  margin: auto;\n  display: flex;\n  gap: 24px;\n  @media screen and (max-width: 768px) {\n    box-sizing: border-box;\n    /* max-height: 1000px; */\n    max-width: 580px;\n    min-height: 656px;\n  }\n`;\nexport const UlList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n`;\nexport const CardImg = styled.img`\n  border: 2px solid rgba(84, 190, 150, 0.2);\n  border-radius: 30px;\n  width: 120px;\n  height: 120px;\n  padding: 12px;\n  box-sizing: border-box;\n`;\nexport const CardInformation = styled.div`\n  width: 86%;\n  box-sizing: border-box;\n`;\nexport const Rating = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\nexport const RatingDiv = styled.div`\n  display: flex;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  color: #191a15;\n  align-items: center;\n  @media screen and (max-width: 768px) {\n    font-size: 20px;\n  }\n`;\nexport const RatingP = styled.p`\n  border-right: 2px solid rgba(84, 190, 150, 0.2);\n  padding-right: 16px;\n  margin-right: 16px;\n  margin-left: 8px;\n`;\nexport const PriceSpan = styled.span`\n  color: #38cd3e;\n`;\nexport const Price = styled.p`\n  margin-right: 28px;\n`;\nexport const Psych = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  color: #8a8a89;\n`;\nexport const PsychP = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  color: #8a8a89;\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\nexport const Name = styled.p`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 100%;\n  color: #191a15;\n  margin-bottom: 24px;\n  @media screen and (max-width: 768px) {\n    left: 18px;\n    top: 24px;\n    position: relative;\n  }\n`;\nexport const ExperienceDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-bottom: 24px;\n  @media screen and (max-width: 768px) {\n    top: 64px;\n    position: relative;\n    left: -143px;\n  }\n`;\nexport const ExperienceContainer = styled.div`\n  display: flex;\n  gap: 4px;\n  @media screen and (max-width: 768px) {\n    min-width: 546px;\n  }\n`;\nexport const Experience = styled.p`\n  background: #f3f3f3;\n  border-radius: 24px;\n  padding: 8px 16px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  color: #8a8a89;\n`;\nexport const ExperienceSpan = styled.span`\n  color: #191a15;\n`;\n\nexport const About = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 125%;\n  color: rgba(25, 26, 21, 0.5);\n  margin-bottom: 14px;\n  @media screen and (max-width: 768px) {\n    position: relative;\n    top: 64px;\n    left: -140px;\n    font-size: 22px;\n    min-width: 528px;\n  }\n`;\nexport const ReadMe = styled.button`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 150%;\n  color: #191a15;\n  background-color: none;\n  padding: 0;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1.5px solid #191a15;\n  background: none;\n  @media screen and (max-width: 768px) {\n    position: relative;\n    top: 64px;\n    left: -140px;\n    font-size: 24px;\n    max-width: 640px;\n    margin-bottom: 72px;\n  }\n`;\nexport const Online = styled.svg`\n  position: absolute;\n  right: 14px;\n  top: 12px;\n`;\nexport const OnlineD = styled.div`\n  position: relative;\n`;\nexport const FavButton = styled.button`\n  background: none;\n  padding: 0;\n  &:hover {\n    background: none;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const ReadMeContainer = styled.div`\n  margin-top: 48px;\n  @media screen and (max-width: 768px) {\n    top: 48px;\n    position: relative;\n    left: -138px;\n  }\n`;\nexport const ReadMeUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n  margin-bottom: 40px;\n`;\nexport const ReadMeLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\nexport const Letter = styled.div`\n  border-radius: 100px;\n  width: 44px;\n  height: 44px;\n  background: rgba(84, 190, 150, 0.2);\n  text-align: center;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 100%;\n  color: #54be96;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const Star = styled.svg`\n  width: 16px;\n  height: 16px;\n`;\nexport const StarDiv = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\nexport const LiDiv = styled.div`\n  display: flex;\n  gap: 12px;\n`;\nexport const Response = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 125%;\n  color: rgba(25, 26, 21, 0.5);\n  @media screen and (max-width: 768px) {\n    font-size: 18px;\n  }\n`;\nexport const MakeAnAppointment = styled.button`\n  border-radius: 30px;\n  padding: 14px 32px;\n  width: 227px;\n  height: 48px;\n  @media screen and (max-width: 768px) {\n    margin-bottom: 58px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const AppointmentModalBackground = styled.div`\n  position: fixed;\n  z-index: 100;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  overflow: auto;\n`;\n\nexport const AppointmentModalContainer = styled.div`\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  border-radius: 30px;\n  background: #fbfbfb;\n  margin: 10% auto;\n  box-sizing: border-box;\n  border-radius: 30px;\n  width: 599px;\n  padding: 64px;\n  position: relative;\n`;\n\nexport const AppointmentH2 = styled.h2`\n  font-weight: 500;\n  font-size: 40px;\n  line-height: 120%;\n  letter-spacing: -0.02em;\n  color: #191a15;\n  margin-bottom: 20px;\n`;\nexport const AppointmentText = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 125%;\n  color: rgba(25, 26, 21, 0.5);\n  margin-bottom: 40px;\n`;\nexport const AppointmentPsych = styled.div`\n  display: flex;\n  gap: 14px;\n  margin-bottom: 40px;\n`;\nexport const AppointmentImg = styled.img`\n  border-radius: 15px;\n  width: 44px;\n  height: 44px;\n`;\nexport const AppointmentForm = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  box-sizing: border-box;\n`;\nexport const TimeDiv = styled.div`\n  display: flex;\n  gap: 8px;\n  width: 100%;\n`;\nexport const AppoinmentInput = styled.input`\n  border: 1px solid rgba(25, 26, 21, 0.1);\n  border-radius: 12px;\n  padding: 16px 0;\n  padding-left: 18px;\n  &::placeholder {\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 125%;\n    color: #191a15;\n  }\n`;\nexport const InputTime = styled.input`\n  border: 1px solid rgba(25, 26, 21, 0.1);\n  border-radius: 12px;\n  padding: 16px 18px;\n  width: 232px;\n  &::placeholder {\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 125%;\n    color: #191a15;\n  }\n`;\nexport const Send = styled.button`\n  border-radius: 30px;\n  padding: 16px 217px;\n  margin-top: 24px;\n  &:hover {\n    background: none;\n  }\n`;\nexport const TextArea = styled.textarea`\n  border: 1px solid rgba(25, 26, 21, 0.1);\n  border-radius: 12px;\n  padding: 16px 18px;\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 125%;\n    color: #191a15;\n  }\n`;\n","import { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport {\n  AppoinmentInput,\n  AppointmentForm,\n  AppointmentH2,\n  AppointmentImg,\n  AppointmentModalBackground,\n  AppointmentModalContainer,\n  AppointmentPsych,\n  AppointmentText,\n  InputTime,\n  Send,\n  TextArea,\n  TimeDiv,\n} from \"./Appointment.styled\";\nimport { Out } from \"../LogIn/LogIn.styled\";\nimport sprite from \"../sprite.svg\";\nimport { useEffect } from \"react\";\n\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n});\n\nconst Appointment = ({ doctor, close }) => {\n  const {\n    register,\n    handleSubmit,\n    // eslint-disable-next-line no-empty-pattern\n    formState: {},\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  useEffect(() => {\n    const handleEscapeKey = (e) => {\n      if (e.key === \"Escape\") {\n        close();\n      }\n    };\n    document.addEventListener(\"keydown\", handleEscapeKey);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscapeKey);\n    };\n  }, [close]);\n\n  const onSubmit = (data) => {\n    close();\n  };\n  const modalClose = () => {\n    close();\n  };\n  const handleBackgroundClick = (event) => {\n    if (event.target === event.currentTarget) {\n      close();\n    }\n  };\n  return (\n    <AppointmentModalBackground onClick={handleBackgroundClick}>\n      <AppointmentModalContainer>\n        <Out onClick={modalClose}>\n          <svg width=\"32\" height=\"32\">\n            <use href={`${sprite}#out`}></use>\n          </svg>\n        </Out>\n        <AppointmentH2>Make an appointment with a psychologists</AppointmentH2>\n        <AppointmentText>\n          You are on the verge of changing your life for the better. Fill out\n          the short form below to book your personal appointment with a\n          professional psychologist. We guarantee confidentiality and respect\n          for your privacy.\n        </AppointmentText>\n        <AppointmentPsych>\n          <AppointmentImg\n            src={doctor.avatar_url}\n            alt={doctor.name}\n          ></AppointmentImg>\n          <div>\n            <p>Your psychologists</p>\n            <p>{doctor.name}</p>\n          </div>\n        </AppointmentPsych>\n        <AppointmentForm onSubmit={handleSubmit(onSubmit)}>\n          <AppoinmentInput\n            type=\"name\"\n            {...register(\"name\")}\n            placeholder=\"Name\"\n          />\n\n          <TimeDiv>\n            <InputTime\n              type=\"number\"\n              {...register(\"number\")}\n              placeholder=\"+380000000000\"\n            />\n\n            <InputTime type=\"time\" {...register(\"time\")} placeholder=\"00:00\" />\n          </TimeDiv>\n\n          <AppoinmentInput\n            type=\"email\"\n            {...register(\"email\")}\n            placeholder=\"Email\"\n          />\n\n          <TextArea\n            type=\"textarea\"\n            {...register(\"comment\")}\n            placeholder=\"Comment\"\n          />\n\n          <Send type=\"submit\">Send</Send>\n        </AppointmentForm>\n      </AppointmentModalContainer>\n    </AppointmentModalBackground>\n  );\n};\nexport default Appointment;\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import { useState } from \"react\";\nimport {\n  Letter,\n  LiDiv,\n  MakeAnAppointment,\n  ReadMeContainer,\n  ReadMeLi,\n  ReadMeUl,\n  Response,\n  Star,\n  StarDiv,\n} from \"./ReadMe.styled\";\nimport Appointment from \"../Appoinment/Appointment\";\nimport sprite from \"../sprite.svg\";\n\nconst ReadMeButton = ({ array, doctor }) => {\n  const [modal, setModal] = useState(false);\n  const ShowModal = () => {\n    setModal(true);\n  };\n  const CloseModal = () => {\n    setModal(false);\n  };\n  return (\n    <ReadMeContainer>\n      {array.map((el, index) => (\n        <ReadMeUl>\n          <ReadMeLi key={index}>\n            <LiDiv>\n              <Letter>\n                <p>{el.reviewer.charAt(0)}</p>\n              </Letter>\n              <div>\n                <p>{el.reviewer}</p>\n                <StarDiv>\n                  <Star>\n                    <svg width=\"16\" height=\"16\">\n                      <use href={`${sprite}#star`}></use>\n                    </svg>\n                  </Star>\n                  <p>{el.rating}</p>\n                </StarDiv>\n              </div>\n            </LiDiv>\n            <Response>{el.comment}</Response>\n          </ReadMeLi>\n        </ReadMeUl>\n      ))}\n      <MakeAnAppointment onClick={ShowModal}>\n        Make an appointment\n      </MakeAnAppointment>\n      {modal && <Appointment doctor={doctor} close={CloseModal} />}\n    </ReadMeContainer>\n  );\n};\nexport default ReadMeButton;\n","import styled from \"styled-components\";\nexport const FavContainer = styled.div`\n  /* background: rgba(84, 190, 150, 0.2); */\n  width: 100%;\n  height: 115%;\n  padding-top: 64px;\n  padding-bottom: 64px;\n`;\n","import styled from \"styled-components\";\nexport const EmptyContainer = styled.div`\n  background-color: #2753d6;\n  margin: auto;\n  margin-top: -64px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 24px;\n  color: #e6faf8;\n  font-size: 50px;\n  width: 100vw;\n  height: 115vh;\n`;\n","import img from \"../giphy.gif\";\nimport { EmptyContainer } from \"./EmptyFavoriteList.styled\";\n\nconst EmptyFavoriteList = () => {\n  return (\n    <EmptyContainer>\n      <p>You have no saved data yet...</p>\n      <img src={img} alt=\"Example GIF\"></img>\n    </EmptyContainer>\n  );\n};\n\nexport default EmptyFavoriteList;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeFavoriteItem } from \"../redux/operetion\";\nimport sprite from \"../sprite.svg\";\nimport ReadMeButton from \"../Card/ReadMe\";\nimport {\n  UlList,\n  About,\n  CardImg,\n  CardInformation,\n  Experience,\n  ExperienceContainer,\n  ExperienceDiv,\n  ExperienceSpan,\n  FavButton,\n  List,\n  Name,\n  Online,\n  OnlineD,\n  Price,\n  PriceSpan,\n  PsychP,\n  Rating,\n  RatingDiv,\n  RatingP,\n  ReadMe,\n} from \"../Card/Card.styled\";\nimport { FavContainer } from \"./FavoriteList.styled\";\nimport EmptyFavoriteList from \"../EmptyFavoriteList/EmptyFavoriteList\";\n\nconst FavoriteList = () => {\n  const [array, setArray] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [clicks, setClicks] = useState({});\n  const favArray = useSelector((state) => state.favoriteArray);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setArray(favArray);\n  }, [favArray]);\n\n  useEffect(() => {\n    const local = JSON.parse(localStorage.getItem(\"favoritesPsych\")) || [];\n    setFavorites(local);\n    return;\n  }, []);\n\n  const removeToFavirite = (name) => {\n    dispatch(removeFavoriteItem(name));\n    const updatedFavorites = favorites.filter((item) => item !== name);\n    setFavorites(updatedFavorites);\n    localStorage.setItem(\"favoritesPsych\", JSON.stringify(updatedFavorites));\n  };\n\n  const handleClick = (index) => {\n    setClicks((prevClicks) => ({\n      ...prevClicks,\n      [index]: !prevClicks[index],\n    }));\n  };\n  return (\n    <FavContainer>\n      {favorites.length > 0 ? (\n        <UlList>\n          {array.map((el, index) => (\n            <List key={el.name}>\n              <OnlineD>\n                <Online width=\"14\" height=\"14\">\n                  <use href={`${sprite}#Group`}></use>\n                </Online>\n                <CardImg src={el.avatar_url} alt={el.name}></CardImg>\n              </OnlineD>\n              <CardInformation>\n                <Rating>\n                  <PsychP>Psychologist</PsychP>\n                  <RatingDiv>\n                    <svg width=\"22\" height=\"22\">\n                      <use href={`${sprite}#star`}></use>\n                    </svg>\n                    <RatingP>Rating: {el.rating}</RatingP>\n                    <Price>\n                      Price / 1 hour:\n                      <PriceSpan> {el.price_per_hour}$</PriceSpan>\n                    </Price>\n                    <FavButton onClick={() => removeToFavirite(el.name)}>\n                      <svg width=\"22\" height=\"22\">\n                        <use href={`${sprite}#hart`}></use>\n                      </svg>\n                    </FavButton>\n                  </RatingDiv>\n                </Rating>\n                <Name>{el.name}</Name>\n                <ExperienceDiv>\n                  <ExperienceContainer>\n                    <Experience>\n                      Experience:{\" \"}\n                      <ExperienceSpan>{el.experience}</ExperienceSpan>\n                    </Experience>\n                    <Experience>\n                      License:\n                      <ExperienceSpan> {el.license}</ExperienceSpan>\n                    </Experience>\n                  </ExperienceContainer>\n                  <ExperienceContainer>\n                    <Experience>\n                      Specialization:\n                      <ExperienceSpan> {el.specialization}</ExperienceSpan>\n                    </Experience>\n                    <Experience>\n                      Initial_consultation:\n                      <ExperienceSpan>\n                        {\" \"}\n                        {el.initial_consultation}\n                      </ExperienceSpan>\n                    </Experience>\n                  </ExperienceContainer>\n                </ExperienceDiv>\n                <About>{el.about}</About>\n                {!clicks[index] && (\n                  <ReadMe onClick={() => handleClick(index)}>Read more</ReadMe>\n                )}\n\n                {clicks[index] && (\n                  <ReadMeButton array={el.reviews} doctor={el} />\n                )}\n              </CardInformation>\n            </List>\n          ))}\n        </UlList>\n      ) : (\n        <EmptyFavoriteList />\n      )}\n    </FavContainer>\n  );\n};\n\nexport default FavoriteList;\n","import styled from \"styled-components\";\n\nexport const LoginModalBackground = styled.div`\n  position: fixed;\n  z-index: 100;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  overflow: auto;\n`;\n\nexport const LoginModalContainer = styled.div`\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  border-radius: 30px;\n  background: #fbfbfb;\n  margin: 10% auto;\n  box-sizing: border-box;\n  width: 565px;\n  height: 509px;\n  padding: 64px;\n  position: relative;\n`;\nexport const LoginH = styled.h3`\n  font-weight: 500;\n  font-size: 40px;\n  line-height: 120%;\n  letter-spacing: -0.02em;\n  color: #191a15;\n  margin-bottom: 20px;\n`;\nexport const LoginParagraf = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 125%;\n  color: rgba(25, 26, 21, 0.5);\n  margin-bottom: 40px;\n  width: 90%;\n`;\nexport const LoginForm = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\nexport const LoginField = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const LoginInput = styled.input`\n  border: 1px solid rgba(25, 26, 21, 0.1);\n  border-radius: 12px;\n  padding: 16px 18px;\n`;\nexport const LoginButton = styled.button`\n  border-radius: 30px;\n  padding: 16px 196px;\n  margin-top: 20px;\n`;\nexport const Out = styled.button`\n  position: absolute;\n  right: 29px;\n  top: 26px;\n  background: none;\n  padding: 0;\n`;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","UlList","_templateObject2","CardImg","_templateObject3","CardInformation","_templateObject4","Rating","_templateObject5","RatingDiv","_templateObject6","RatingP","_templateObject7","PriceSpan","_templateObject8","Price","_templateObject9","PsychP","_templateObject10","_templateObject11","Name","_templateObject12","ExperienceDiv","_templateObject13","ExperienceContainer","_templateObject14","Experience","_templateObject15","ExperienceSpan","_templateObject16","About","_templateObject17","ReadMe","_templateObject18","Online","_templateObject19","OnlineD","_templateObject20","FavButton","_templateObject21","ReadMeContainer","ReadMeUl","ReadMeLi","Letter","Star","StarDiv","LiDiv","Response","MakeAnAppointment","AppointmentModalBackground","AppointmentModalContainer","AppointmentH2","AppointmentText","AppointmentPsych","AppointmentImg","AppointmentForm","TimeDiv","AppoinmentInput","InputTime","Send","TextArea","schema","yup","shape","email","required","password","_ref","doctor","close","_useForm","useForm","resolver","yupResolver","register","handleSubmit","obj","TypeError","_objectDestructuringEmpty","formState","useEffect","handleEscapeKey","e","key","document","addEventListener","removeEventListener","_jsx","onClick","event","target","currentTarget","children","_jsxs","Out","width","height","href","concat","sprite","src","avatar_url","alt","name","onSubmit","data","_objectSpread","type","placeholder","array","_useState","useState","_useState2","_slicedToArray","modal","setModal","map","el","index","reviewer","charAt","rating","comment","Appointment","FavContainer","EmptyContainer","img","setArray","_useState3","_useState4","favorites","setFavorites","_useState5","_useState6","clicks","setClicks","favArray","useSelector","state","favoriteArray","dispatch","useDispatch","local","JSON","parse","localStorage","getItem","length","price_per_hour","removeFavoriteItem","updatedFavorites","filter","item","setItem","stringify","removeToFavirite","experience","license","specialization","initial_consultation","about","prevClicks","_defineProperty","handleClick","ReadMeButton","reviews","EmptyFavoriteList","LoginModalBackground","LoginModalContainer","LoginH","LoginParagraf","LoginForm","LoginField","LoginInput","LoginButton"],"sourceRoot":""}