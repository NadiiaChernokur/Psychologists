{"version":3,"file":"static/js/71.bcdbadb2.chunk.js","mappings":"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","sources":["FavoriteList/FavoriteList.styled.js","EmptyFavoriteList/EmptyFavoriteList.styled.js","EmptyFavoriteList/EmptyFavoriteList.js","FavoriteList/FavoriteList.js"],"sourcesContent":["import styled from 'styled-components';\nexport const FavContainer = styled.div`\n  width: 100%;\n  height: 115%;\n  padding-top: 64px;\n  padding-bottom: 64px;\n`;\n","import styled from \"styled-components\";\nexport const EmptyContainer = styled.div`\n  background-color: #2753d6;\n  margin: auto;\n  margin-top: -64px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 24px;\n  color: #e6faf8;\n  font-size: 50px;\n  width: 100vw;\n  height: 115vh;\n`;\n","import img from \"../giphy.gif\";\nimport { EmptyContainer } from \"./EmptyFavoriteList.styled\";\n\nconst EmptyFavoriteList = () => {\n  return (\n    <EmptyContainer>\n      <p>You have no saved data yet...</p>\n      <img src={img} alt=\"Example GIF\"></img>\n    </EmptyContainer>\n  );\n};\n\nexport default EmptyFavoriteList;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeFavoriteItem } from \"../redux/operetion\";\nimport sprite from \"../sprite.svg\";\nimport ReadMeButton from \"../Card/ReadMe\";\nimport {\n  UlList,\n  About,\n  CardImg,\n  CardInformation,\n  Experience,\n  ExperienceContainer,\n  ExperienceDiv,\n  ExperienceSpan,\n  FavButton,\n  List,\n  Name,\n  Online,\n  OnlineD,\n  Price,\n  PriceSpan,\n  PsychP,\n  Rating,\n  RatingDiv,\n  RatingP,\n  ReadMe,\n} from \"../Card/Card.styled\";\nimport { FavContainer } from \"./FavoriteList.styled\";\nimport EmptyFavoriteList from \"../EmptyFavoriteList/EmptyFavoriteList\";\n\nconst FavoriteList = () => {\n  const [array, setArray] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [clicks, setClicks] = useState({});\n  const favArray = useSelector((state) => state.favoriteArray);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setArray(favArray);\n  }, [favArray]);\n\n  useEffect(() => {\n    const local = JSON.parse(localStorage.getItem(\"favoritesPsych\")) || [];\n    setFavorites(local);\n    return;\n  }, []);\n\n  const removeToFavirite = (name) => {\n    dispatch(removeFavoriteItem(name));\n    const updatedFavorites = favorites.filter((item) => item !== name);\n    setFavorites(updatedFavorites);\n    localStorage.setItem(\"favoritesPsych\", JSON.stringify(updatedFavorites));\n  };\n\n  const handleClick = (index) => {\n    setClicks((prevClicks) => ({\n      ...prevClicks,\n      [index]: !prevClicks[index],\n    }));\n  };\n  return (\n    <FavContainer>\n      {favorites.length > 0 ? (\n        <UlList>\n          {array.map((el, index) => (\n            <List key={el.name}>\n              <OnlineD>\n                <Online width=\"14\" height=\"14\">\n                  <use href={`${sprite}#Group`}></use>\n                </Online>\n                <CardImg src={el.avatar_url} alt={el.name}></CardImg>\n              </OnlineD>\n              <CardInformation>\n                <Rating>\n                  <PsychP>Psychologist</PsychP>\n                  <RatingDiv>\n                    <svg width=\"22\" height=\"22\">\n                      <use href={`${sprite}#star`}></use>\n                    </svg>\n                    <RatingP>Rating: {el.rating}</RatingP>\n                    <Price>\n                      Price / 1 hour:\n                      <PriceSpan> {el.price_per_hour}$</PriceSpan>\n                    </Price>\n                    <FavButton onClick={() => removeToFavirite(el.name)}>\n                      <svg width=\"22\" height=\"22\">\n                        <use href={`${sprite}#hart`}></use>\n                      </svg>\n                    </FavButton>\n                  </RatingDiv>\n                </Rating>\n                <Name>{el.name}</Name>\n                <ExperienceDiv>\n                  <ExperienceContainer>\n                    <Experience>\n                      Experience:{\" \"}\n                      <ExperienceSpan>{el.experience}</ExperienceSpan>\n                    </Experience>\n                    <Experience>\n                      License:\n                      <ExperienceSpan> {el.license}</ExperienceSpan>\n                    </Experience>\n                  </ExperienceContainer>\n                  <ExperienceContainer>\n                    <Experience>\n                      Specialization:\n                      <ExperienceSpan> {el.specialization}</ExperienceSpan>\n                    </Experience>\n                    <Experience>\n                      Initial_consultation:\n                      <ExperienceSpan>\n                        {\" \"}\n                        {el.initial_consultation}\n                      </ExperienceSpan>\n                    </Experience>\n                  </ExperienceContainer>\n                </ExperienceDiv>\n                <About>{el.about}</About>\n                {!clicks[index] && (\n                  <ReadMe onClick={() => handleClick(index)}>Read more</ReadMe>\n                )}\n\n                {clicks[index] && (\n                  <ReadMeButton array={el.reviews} doctor={el} />\n                )}\n              </CardInformation>\n            </List>\n          ))}\n        </UlList>\n      ) : (\n        <EmptyFavoriteList />\n      )}\n    </FavContainer>\n  );\n};\n\nexport default FavoriteList;\n"],"names":["FavContainer","styled","_templateObject","_taggedTemplateLiteral","EmptyContainer","_jsxs","children","_jsx","src","img","alt","_useState","useState","_useState2","_slicedToArray","array","setArray","_useState3","_useState4","favorites","setFavorites","_useState5","_useState6","clicks","setClicks","favArray","useSelector","state","favoriteArray","dispatch","useDispatch","useEffect","local","JSON","parse","localStorage","getItem","length","UlList","map","el","index","List","OnlineD","Online","width","height","href","concat","sprite","CardImg","avatar_url","name","CardInformation","Rating","PsychP","RatingDiv","RatingP","rating","Price","PriceSpan","price_per_hour","FavButton","onClick","removeFavoriteItem","updatedFavorites","filter","item","setItem","stringify","removeToFavirite","Name","ExperienceDiv","ExperienceContainer","Experience","ExperienceSpan","experience","license","specialization","initial_consultation","About","about","ReadMe","prevClicks","_objectSpread","_defineProperty","handleClick","ReadMeButton","reviews","doctor","EmptyFavoriteList"],"sourceRoot":""}